{{ $name := include "github-actions-cache-server.fullname" . }}
{{ $internalApiBaseUrl := printf "http://%s.%s.svc.cluster.local" $name .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    {{- include "github-actions-cache-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.strategy }}
  strategy: {{ toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "github-actions-cache-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "github-actions-cache-server.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "github-actions-cache-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: cache
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: "/tmp"
          {{- if .Values.persistentVolumeClaim.enabled }}
            - name: cache-data
              mountPath: "/app/.data"
          {{- end }}
          env:
            - name: PORT
              value: "3000"
            - name: API_BASE_URL
              value: {{ default $internalApiBaseUrl .Values.apiBaseUrl }}
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: tmp
      {{- toYaml .Values.tmpVolume | nindent 10 }}
      {{- if .Values.persistentVolumeClaim.enabled }}
        - name: cache-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolumeClaim.template.metadata.name }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
